{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCDismissibleDrawerFoundation } from '../dismissible/foundation';\n/* istanbul ignore next: subclass is not a branch statement */\nvar MDCModalDrawerFoundation = /** @class */function (_super) {\n  __extends(MDCModalDrawerFoundation, _super);\n  function MDCModalDrawerFoundation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Handles click event on scrim.\n   */\n  MDCModalDrawerFoundation.prototype.handleScrimClick = function () {\n    this.close();\n  };\n  /**\n   * Called when drawer finishes open animation.\n   */\n  MDCModalDrawerFoundation.prototype.opened = function () {\n    this.adapter.trapFocus();\n  };\n  /**\n   * Called when drawer finishes close animation.\n   */\n  MDCModalDrawerFoundation.prototype.closed = function () {\n    this.adapter.releaseFocus();\n  };\n  return MDCModalDrawerFoundation;\n}(MDCDismissibleDrawerFoundation);\nexport { MDCModalDrawerFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCModalDrawerFoundation;","map":{"version":3,"names":["__extends","MDCDismissibleDrawerFoundation","MDCModalDrawerFoundation","_super","apply","arguments","prototype","handleScrimClick","close","opened","adapter","trapFocus","closed","releaseFocus"],"sources":["C:/Users/SHAURYA ROY/OneDrive/Desktop/portfolio/ojas-dhar/app/node_modules/@material/drawer/modal/foundation.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCDismissibleDrawerFoundation } from '../dismissible/foundation';\n/* istanbul ignore next: subclass is not a branch statement */\nvar MDCModalDrawerFoundation = /** @class */ (function (_super) {\n    __extends(MDCModalDrawerFoundation, _super);\n    function MDCModalDrawerFoundation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Handles click event on scrim.\n     */\n    MDCModalDrawerFoundation.prototype.handleScrimClick = function () {\n        this.close();\n    };\n    /**\n     * Called when drawer finishes open animation.\n     */\n    MDCModalDrawerFoundation.prototype.opened = function () {\n        this.adapter.trapFocus();\n    };\n    /**\n     * Called when drawer finishes close animation.\n     */\n    MDCModalDrawerFoundation.prototype.closed = function () {\n        this.adapter.releaseFocus();\n    };\n    return MDCModalDrawerFoundation;\n}(MDCDismissibleDrawerFoundation));\nexport { MDCModalDrawerFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCModalDrawerFoundation;\n//# sourceMappingURL=foundation.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,8BAA8B,QAAQ,2BAA2B;AAC1E;AACA,IAAIC,wBAAwB,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC5DH,SAAS,CAACE,wBAAwB,EAAEC,MAAM,CAAC;EAC3C,SAASD,wBAAwB,GAAG;IAChC,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACA;AACJ;AACA;EACIH,wBAAwB,CAACI,SAAS,CAACC,gBAAgB,GAAG,YAAY;IAC9D,IAAI,CAACC,KAAK,EAAE;EAChB,CAAC;EACD;AACJ;AACA;EACIN,wBAAwB,CAACI,SAAS,CAACG,MAAM,GAAG,YAAY;IACpD,IAAI,CAACC,OAAO,CAACC,SAAS,EAAE;EAC5B,CAAC;EACD;AACJ;AACA;EACIT,wBAAwB,CAACI,SAAS,CAACM,MAAM,GAAG,YAAY;IACpD,IAAI,CAACF,OAAO,CAACG,YAAY,EAAE;EAC/B,CAAC;EACD,OAAOX,wBAAwB;AACnC,CAAC,CAACD,8BAA8B,CAAE;AAClC,SAASC,wBAAwB;AACjC;AACA,eAAeA,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}