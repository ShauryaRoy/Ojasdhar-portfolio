{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __read, __spreadArray } from \"tslib\";\nimport { MDCFoundation } from './foundation';\nvar MDCComponent = /** @class */function () {\n  function MDCComponent(root, foundation) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n    this.root = root;\n    this.initialize.apply(this, __spreadArray([], __read(args)));\n    // Note that we initialize foundation here and not within the constructor's\n    // default param so that this.root is defined and can be used within the\n    // foundation class.\n    this.foundation = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation.init();\n    this.initialSyncWithDOM();\n  }\n  MDCComponent.attachTo = function (root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation({}));\n  };\n  /* istanbul ignore next: method param only exists for typing purposes; it does not need to be unit tested */\n  MDCComponent.prototype.initialize = function () {\n    var _args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      _args[_i] = arguments[_i];\n    }\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  };\n\n  MDCComponent.prototype.getDefaultFoundation = function () {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');\n  };\n  MDCComponent.prototype.initialSyncWithDOM = function () {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  };\n  MDCComponent.prototype.destroy = function () {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation.destroy();\n  };\n  MDCComponent.prototype.listen = function (evtType, handler, options) {\n    this.root.addEventListener(evtType, handler, options);\n  };\n  MDCComponent.prototype.unlisten = function (evtType, handler, options) {\n    this.root.removeEventListener(evtType, handler, options);\n  };\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n   */\n  MDCComponent.prototype.emit = function (evtType, evtData, shouldBubble) {\n    if (shouldBubble === void 0) {\n      shouldBubble = false;\n    }\n    var evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        bubbles: shouldBubble,\n        detail: evtData\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n    this.root.dispatchEvent(evt);\n  };\n  return MDCComponent;\n}();\nexport { MDCComponent };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCComponent;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQA,aAAa,QAAO,cAAc;AAG1C;EAWE,sBACWC,IAAa,EAAEC,UAA2B;IAAE;SAAA,UAAkB,EAAlBC,qBAAkB,EAAlBA,IAAkB;MAAlBC;;IAA5C,SAAI,GAAJH,IAAI;IACb,IAAI,CAACI,UAAU,OAAf,IAAI,2BAAeD,IAAI;IACvB;IACA;IACA;IACA,IAAI,CAACF,UAAU,GACXA,UAAU,KAAKI,SAAS,GAAG,IAAI,CAACC,oBAAoB,EAAE,GAAGL,UAAU;IACvE,IAAI,CAACA,UAAU,CAACM,IAAI,EAAE;IACtB,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EApBOC,qBAAQ,GAAf,UAAgBT,IAAa;IAC3B;IACA;IACA;IACA;IACA,OAAO,IAAIS,YAAY,CAACT,IAAI,EAAE,IAAID,aAAa,CAAC,EAAE,CAAC,CAAC;EACtD,CAAC;EAgBD;EACAU,iCAAU,GAAV;IAAW;SAAA,UAAwB,EAAxBP,qBAAwB,EAAxBA,IAAwB;MAAxBQ;;IACT;IACA;IACA;EACF,CAAC;;EAEDD,2CAAoB,GAApB;IACE;IACA;IACA,MAAM,IAAIE,KAAK,CAAC,gFAAgF,GAC5F,kBAAkB,CAAC;EACzB,CAAC;EAEDF,yCAAkB,GAAlB;IACE;IACA;IACA;IACA;EAAA,CACD;EAEDA,8BAAO,GAAP;IACE;IACA;IACA,IAAI,CAACR,UAAU,CAACW,OAAO,EAAE;EAC3B,CAAC;EAUDH,6BAAM,GAAN,UAAOI,OAAe,EAAEC,OAAsB,EAAEC,OAA2C;IACzF,IAAI,CAACf,IAAI,CAACgB,gBAAgB,CAACH,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC;EACvD,CAAC;EAUDN,+BAAQ,GAAR,UAASI,OAAe,EAAEC,OAAsB,EAAEC,OAA2C;IAC3F,IAAI,CAACf,IAAI,CAACiB,mBAAmB,CAACJ,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC;EAC1D,CAAC;EAED;;;EAGAN,2BAAI,GAAJ,UAAuBI,OAAe,EAAEK,OAAU,EAAEC,YAAoB;IAApB;MAAAA,oBAAoB;IAAA;IACtE,IAAIC,GAAmB;IACvB,IAAI,OAAOC,WAAW,KAAK,UAAU,EAAE;MACrCD,GAAG,GAAG,IAAIC,WAAW,CAAIR,OAAO,EAAE;QAChCS,OAAO,EAAEH,YAAY;QACrBI,MAAM,EAAEL;OACT,CAAC;KACH,MAAM;MACLE,GAAG,GAAGI,QAAQ,CAACC,WAAW,CAAC,aAAa,CAAC;MACzCL,GAAG,CAACM,eAAe,CAACb,OAAO,EAAEM,YAAY,EAAE,KAAK,EAAED,OAAO,CAAC;;IAG5D,IAAI,CAAClB,IAAI,CAAC2B,aAAa,CAACP,GAAG,CAAC;EAC9B,CAAC;EACH,mBAAC;AAAD,CAAC,EA3FD;;AA6FA;AACA,eAAeX,YAAY","names":["MDCFoundation","root","foundation","_i","args","initialize","undefined","getDefaultFoundation","init","initialSyncWithDOM","MDCComponent","_args","Error","destroy","evtType","handler","options","addEventListener","removeEventListener","evtData","shouldBubble","evt","CustomEvent","bubbles","detail","document","createEvent","initCustomEvent","dispatchEvent"],"sources":["component.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}